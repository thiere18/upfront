{"version":3,"sources":["config/index.tsx","utils/auth.ts","views/Home.tsx","views/Login.tsx","views/SignUp.tsx","views/Protected.tsx","views/PrivateRoute.tsx","admin/authProvider.ts","admin/Users/UserEdit.tsx","admin/Users/UserList.tsx","admin/Users/UserCreate.tsx","admin/Users/UserShow.tsx","admin/Roles/RoleEdit.tsx","admin/Roles/RoleList.tsx","admin/Roles/RoleCreate.tsx","admin/Roles/RoleShow.tsx","admin/Admin.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["BACKEND_URL","isAuthenticated","permissions","localStorage","getItem","login","email","password","a","length","Error","formData","FormData","append","request","Request","method","body","fetch","response","status","json","data","detail","decodedToken","decodeJwt","setItem","signUp","passwordConfirmation","useStyles","makeStyles","theme","link","color","Home","useState","to","margin","spacing","padding","button","textTransform","marginTop","Login","classes","history","useHistory","setEmail","setPassword","error","setError","handleSubmit","_","push","message","String","Paper","className","Grid","container","alignItems","item","Face","md","sm","xs","TextField","id","label","type","value","onChange","e","currentTarget","fullWidth","autoFocus","required","Fingerprint","Alert","severity","justify","FormControlLabel","control","Checkbox","Button","disableFocusRipple","disableRipple","variant","onClick","SignUp","setPasswordConfirmation","Protected","PrivateRoute","component","rest","render","props","React","createElement","authProvider","username","then","statusText","access_token","logout","removeItem","Promise","resolve","checkError","reject","checkAuth","getPermissions","role","UserEdit","Edit","SimpleForm","TextInput","disabled","source","PasswordInput","jsonString","reactJsonOptions","name","collapsed","enableClipboard","displayDataTypes","ReferenceInput","reference","SelectInput","optionText","optionValue","validate","BooleanInput","UserList","List","Datagrid","rowClick","EmailField","BooleanField","ChipField","UserCreate","Create","UserShow","console","log","Show","TabbedShowLayout","Tab","RoleEdit","RoleList","RoleCreate","RoleShow","ArrayField","dataProvider","simpleRestProvider","url","options","headers","Headers","Accept","token","set","fetchUtils","fetchJson","Admin","Resource","list","edit","create","show","app","textAlign","header","backgroundColor","minHeight","display","flexDirection","justifyContent","fontSize","Routes","path","exact","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.06bed575.chunk.js","sourcesContent":["export const BACKEND_URL: string =  'https://backs.thiere18.studio';\n\n","import decodeJwt from 'jwt-decode';\nimport {BACKEND_URL} from '../config'\nexport const isAuthenticated = () => {\n  const permissions = localStorage.getItem('permissions');\n  if (!permissions) {\n    return false;\n  }\n  return permissions === 'user' || permissions === 'admin' ? true : false;\n};\n\n/**\n * Login to backend and store JSON web token on success\n *\n * @param email\n * @param password\n * @returns JSON data containing access token on success\n * @throws Error on http errors or failed attempts\n */\nexport const login = async (email: string, password: string) => {\n  // Assert email or password is not empty\n  if (!(email.length > 0) || !(password.length > 0)) {\n    throw new Error('Email or password was not provided');\n  }\n  const formData = new FormData();\n  // OAuth2 expects form data, not JSON data\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const request = new Request(`${BACKEND_URL}/api/token`, {\n    method: 'POST',\n    body: formData,\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  if ('access_token' in data) {\n    const decodedToken: any = decodeJwt(data['access_token']);\n    localStorage.setItem('token', data['access_token']);\n    localStorage.setItem('permissions', decodedToken.permissions);\n  }\n\n  return data;\n};\n\n/**\n * Sign up via backend and store JSON web token on success\n *\n * @param email\n * @param password\n * @returns JSON data containing access token on success\n * @throws Error on http errors or failed attempts\n */\nexport const signUp = async (\n  email: string,\n  password: string,\n  passwordConfirmation: string\n) => {\n  // Assert email or password or password confirmation is not empty\n  if (!(email.length > 0)) {\n    throw new Error('Email was not provided');\n  }\n  if (!(password.length > 0)) {\n    throw new Error('Password was not provided');\n  }\n  if (!(passwordConfirmation.length > 0)) {\n    throw new Error('Password confirmation was not provided');\n  }\n\n  const formData = new FormData();\n  // OAuth2 expects form data, not JSON data\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const request = new Request('/api/signup', {\n    method: 'POST',\n    body: formData,\n  });\n\n  const response = await fetch(request);\n\n  if (response.status === 500) {\n    throw new Error('Internal server error');\n  }\n\n  const data = await response.json();\n  if (response.status > 400 && response.status < 500) {\n    if (data.detail) {\n      throw data.detail;\n    }\n    throw data;\n  }\n\n  if ('access_token' in data) {\n    const decodedToken: any = decodeJwt(data['access_token']);\n    localStorage.setItem('token', data['access_token']);\n    localStorage.setItem('permissions', decodedToken.permissions);\n  }\n\n  return data;\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('permissions');\n};\n","import React, { FC, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { getMessage } from '../utils/api';\nimport { isAuthenticated } from '../utils/auth';\nimport {  Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: '#61dafb',\n  },\n}));\n\nexport const Home: FC = () => {\n  const [message, setMessage] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const classes = useStyles();\n\n  const queryBackend = async () => {\n    try {\n      const message = await getMessage();\n      setMessage(message);\n    } catch (err) {\n      setError(String(err));\n    }\n  };\n\n  return (\n    <>\n\n     \n      {isAuthenticated() ? (\n        <>\n            <Redirect to=\"/admin\" />\n\n          </>\n      ) : (\n        <>\n            <Redirect to=\"/login\" />\n\n        </>\n      )}\n    </>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport {\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Face, Fingerprint } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { login, isAuthenticated } from '../utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    textTransform: 'none',\n  },\n  marginTop: {\n    marginTop: 10,\n  },\n}));\n\nexport const Login: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleSubmit = async (_: React.MouseEvent) => {\n    setError('');\n    try {\n      const data = await login(email, password);\n\n      if (data) {\n        history.push('/');\n      }\n    } catch (err) {\n      if (err instanceof Error) {\n        // handle errors thrown from frontend\n        setError(err.message);\n      } else {\n        // handle errors thrown from backend\n        setError(String(err));\n      }\n    }\n  };\n\n  return isAuthenticated() ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper className={classes.padding}>\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Face />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setEmail(e.currentTarget.value)\n              }\n              fullWidth\n              autoFocus\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPassword(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container alignItems=\"center\">\n          {error && (\n            <Grid item>\n              <Alert severity=\"error\">{error}</Alert>\n            </Grid>\n          )}\n        </Grid>\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" />}\n              label=\"Remember me\"\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              disableFocusRipple\n              disableRipple\n              className={classes.button}\n              variant=\"text\"\n              color=\"primary\"\n            >\n              Forgot password ?\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.marginTop}>\n          {' '}\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => history.push('/signup')}\n          >\n            Sign Up\n          </Button>{' '}\n          &nbsp;\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Login\n          </Button>\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { Paper, Grid, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Face, Fingerprint } from '@material-ui/icons';\nimport { Alert } from '@material-ui/lab';\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nimport { signUp, isAuthenticated } from '../utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n  button: {\n    textTransform: 'none',\n  },\n  marginTop: {\n    marginTop: 10,\n  },\n}));\n\nexport const SignUp: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleSubmit = async (_: React.MouseEvent) => {\n    // Password confirmation validation\n    if (password !== passwordConfirmation) setError('Passwords do not match');\n    else {\n      setError('');\n      try {\n        const data = await signUp(email, password, passwordConfirmation);\n\n        if (data) {\n          history.push('/');\n        }\n      } catch (err) {\n        if (err instanceof Error) {\n          // handle errors thrown from frontend\n          setError(err.message);\n        } else {\n          // handle errors thrown from backend\n          setError(String(err));\n        }\n      }\n    }\n  };\n\n  return isAuthenticated() ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper className={classes.padding}>\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Face />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setEmail(e.currentTarget.value)\n              }\n              fullWidth\n              autoFocus\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPassword(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <Fingerprint />\n          </Grid>\n          <Grid item md={true} sm={true} xs={true}>\n            <TextField\n              id=\"passwordConfirmation\"\n              label=\"Confirm password\"\n              type=\"password\"\n              value={passwordConfirmation}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setPasswordConfirmation(e.currentTarget.value)\n              }\n              fullWidth\n              required\n            />\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container alignItems=\"center\">\n          {error && (\n            <Grid item>\n              <Alert severity=\"error\">{error}</Alert>\n            </Grid>\n          )}\n        </Grid>\n        <Grid container justify=\"center\" className={classes.marginTop}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Sign Up\n          </Button>\n        </Grid>\n      </div>\n    </Paper>\n  );\n};\n","import React, { FC } from 'react';\n\nexport const Protected: FC = () => {\n  return <h1>This component is protected</h1>;\n};\n","import React, { FC } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { isAuthenticated } from '../utils/auth';\n\ntype PrivateRouteType = {\n  component: React.ComponentType<any>;\n  path?: string | string[];\n};\n\nexport const PrivateRoute: FC<PrivateRouteType> = ({\n  component,\n  ...rest\n}: any) => (\n  <Route\n    {...rest}\n    render={(props: any) =>\n      isAuthenticated() === true ? (\n        React.createElement(component, props)\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n","import decodeJwt from 'jwt-decode';\nimport { BACKEND_URL } from '../config'\ntype loginFormType = {\n  username: string;\n  password: string;\n};\n\nconst authProvider = {\n  login: ({ username, password }: loginFormType) => {\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const request = new Request(`${BACKEND_URL}/api/token`, {\n      method: 'POST',\n      body: formData,\n    });\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ access_token }) => {\n        const decodedToken: any = decodeJwt(access_token);\n        if (decodedToken.permissions === 'restricted'  ) {\n          throw new Error('Forbidden');\n        }\n        localStorage.setItem('token', access_token);\n        localStorage.setItem('permissions', decodedToken.permissions);\n      });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('permissions');\n    return Promise.resolve();\n  },\n  checkError: (error: { status: number }) => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject();\n    // localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  },\n};\n\nexport default authProvider;\n","import React, { FC } from 'react';\nimport { required } from 'react-admin';\nimport { ReferenceInput } from 'react-admin';\nimport {\n  Edit,\n  SimpleForm,\n  TextInput,\n  PasswordInput,\n  BooleanInput,\n  SelectInput\n} from 'react-admin';\nimport { JsonInput } from \"react-admin-json-view\";\n\nexport const UserEdit: FC = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput source=\"username\" />\n      <TextInput source=\"email\" />\n      <TextInput source=\"first_name\" />\n      <TextInput source=\"last_name\" />\n      <PasswordInput source=\"password\" />\n \n      <JsonInput\n        source=\"restricted\"\n        jsonString={false} // Set to true if the value is a string, default: false\n        reactJsonOptions={{\n          // Props passed to react-json-view\n          name: null,\n          collapsed: true,\n          enableClipboard: false,\n          displayDataTypes: false,\n        }}\n      />\n            <JsonInput\n        source=\"permitted\"\n        jsonString={false} // Set to true if the value is a string, default: false\n        reactJsonOptions={{\n          // Props passed to react-json-view\n          name: null,\n          collapsed: true,\n          enableClipboard: false,\n          displayDataTypes: false,\n        }}\n      />\n            <ReferenceInput source=\"role_id\" reference=\"roles\">\n               <SelectInput optionText=\"name\" optionValue=\"id\" validate={[required()]} />\n           </ReferenceInput>\n      <BooleanInput source=\"is_active\" />\n    </SimpleForm>\n  </Edit>\n);\n","// in src/users.js\nimport React, { FC } from 'react';\nimport { ChipField } from 'react-admin';\n// import { usePermissions } from 'react-admin';\n\nimport {\n  List,\n  Datagrid,\n  TextField,\n  BooleanField,\n  EmailField,\n\n} from 'react-admin';\n\n// const { loading, permissions } = usePermissions();\n\nexport const UserList: FC = (props) => {\n\n  return (\n    <>\n      <List {...props}>\n        <Datagrid rowClick=\"show\">\n          <TextField source=\"id\" />\n          <TextField source=\"username\" />\n          <EmailField source=\"email\" />\n          <TextField source=\"first_name\" />\n          <TextField source=\"last_name\" />\n          <BooleanField source=\"is_active\" />\n          <TextField source=\"role\" />\n          <ChipField source=\"restricted.sources\" label=\"r.sources\" />\n          <ChipField source=\"restricted.areas\" label=\"r.areas\" />\n          <ChipField source=\"restricted.tags\" label=\"r.tags\" />\n          <ChipField source=\"permitted.sources\" label=\"p.sources\" />\n          <ChipField source=\"permitted.areas\" label=\"p.areas\" />\n          <ChipField source=\"permitted.tags\" label=\"p.tags\" />\n           {/* <ShowButton/> */}\n          {/* {permissions==='admin'&& <EditButton />} */}\n          {/* {permissions === 'admin' && <DeleteButton basePath=\"/users\" /> } */}\n        </Datagrid>\n      </List>\n    </>\n  )\n};\n","import React, { FC } from 'react';\nimport { ReferenceInput } from 'react-admin';\nimport { required } from 'react-admin';\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  PasswordInput,\n  BooleanInput,\n  SelectInput,\n  \n} from 'react-admin';\nimport {  JsonInput } from \"react-admin-json-view\";\n\nexport const UserCreate: FC = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"username\" variant=\"outlined\" validate={[required()]} />\n      <TextInput source=\"email\" variant=\"outlined\" validate={[required()]} />\n      <TextInput source=\"first_name\" variant=\"outlined\" />\n      <TextInput source=\"last_name\" variant=\"outlined\" />\n      <PasswordInput source=\"password\" variant=\"outlined\" validate={[required()]} />\n      <JsonInput\n        validate={[required()]}\n        source=\"restricted\"\n        jsonString={false} // Set to true if the value is a string, default: false\n        reactJsonOptions={{\n          // Props passed to react-json-view\n          name: null,\n          collapsed: true,\n          enableClipboard: false,\n          displayDataTypes: false,\n        }}\n      />\n      <JsonInput\n        validate={[required()]}\n        source=\"permitted\"\n        jsonString={false} // Set to true if the value is a string, default: false\n        reactJsonOptions={{\n          // Props passed to react-json-view\n          name: null,\n          collapsed: true,\n          enableClipboard: false,\n          displayDataTypes: false,\n        }}\n      />\n            <ReferenceInput source=\"role_id\" reference=\"roles\" variant=\"outlined\" >\n               <SelectInput optionText=\"name\" optionValue=\"id\" validate={[required()]}  />\n           </ReferenceInput>\n      <BooleanInput source=\"is_active\" />\n\n\n    </SimpleForm>\n  </Create>\n);\n","import React, { FC } from 'react';\nimport { ChipField } from 'react-admin';\n\n\nimport { Show, TextField } from 'react-admin';\nimport { TabbedShowLayout } from 'react-admin';\nimport { Tab } from 'react-admin';\n\n\nexport const UserShow: FC = (props) => {\n  console.log(props);\n\n  return (\n    <>\n<Show {...props}>\n\n        <TabbedShowLayout>\n            <Tab label=\"summary\">\n                <TextField label=\"Id\" source=\"id\" />\n                <TextField source=\"username\" />\n            <TextField source=\"email\" />\n            <TextField source=\"role\" />\n            <TextField source=\"first_name\" />\n            <TextField source=\"last_name\" />\n            <TextField source=\"is_active\" />\n\n            </Tab>\n            <Tab label=\"restrctions\" >\n            <ChipField source=\"restricted.sources\" label=\"sources\" />\n            <ChipField source=\"restricted.areas\" label=\"areas\" />\n            <ChipField source=\"restricted.tags\" label=\"tags\"/>\n\n            </Tab>\n            <Tab label=\"permissions\" >\n            <ChipField source=\"permitted.sources\" label=\"sources\" />\n            <ChipField source=\"permitted.areas\" label=\"areas\" />\n            <ChipField source=\"permitted.tags\" label=\"tags\"/>\n            </Tab>\n        </TabbedShowLayout>\n\n    </Show>\n\n    </>\n  )\n};","import React, { FC } from 'react';\nimport {\n  Edit,\n  SimpleForm,\n  TextInput,\n\n} from 'react-admin';\n\n\nexport const RoleEdit: FC = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" variant=\"outlined\" />\n      <TextInput source=\"name\" variant=\"outlined\" />\n    </SimpleForm>\n  </Edit>\n);\n","// in src/users.js\nimport React, { FC } from 'react';\nimport { ChipField } from 'react-admin';\n// import { usePermissions } from 'react-admin';\n\nimport {\n  List,\n  Datagrid,\n  TextField,\n  BooleanField,\n  EmailField,\n\n} from 'react-admin';\n\n// const { loading, permissions } = usePermissions();\n\nexport const RoleList: FC = (props) => {\n\n  return (\n    <>\n      <List {...props}>\n        <Datagrid rowClick=\"show\">\n          <TextField source=\"id\" />\n          <TextField source=\"name\" />\n           {/* <ShowButton/> */}\n          {/* {permissions==='admin'&& <EditButton />} */}\n          {/* {permissions === 'admin' && <DeleteButton basePath=\"/users\" /> } */}\n        </Datagrid>\n      </List>\n    </>\n  )\n};\n","import React, { FC } from 'react';\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n\n} from 'react-admin';\n\n\n\nexport const RoleCreate: FC = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" variant=\"outlined\" />\n\n    </SimpleForm>\n  </Create>\n);\n","import React, { FC } from 'react';\nimport { ChipField } from 'react-admin';\nimport { Datagrid } from 'react-admin';\nimport { BooleanField } from 'react-admin';\nimport { ArrayField } from 'react-admin';\n\n\nimport { Show, TextField } from 'react-admin';\nimport { TabbedShowLayout } from 'react-admin';\nimport { Tab } from 'react-admin';\n\n\nexport const RoleShow: FC = (props) => {\n  console.log(props);\n\n  return (\n    <>\n<Show {...props}>\n\n        <TabbedShowLayout>\n            <Tab label=\"summary\">\n                <TextField label=\"Id\" source=\"id\" />\n                <TextField source=\"name\" />\n            </Tab>\n                  <Tab label=\"related users\" >\n\n                  <ArrayField source=\"users\">\n    <Datagrid>\n                              <TextField source=\"username\" label=\"username\" />\n                              <TextField source=\"email\" label=\"email\" />\n                              <BooleanField source=\"is_active\" label=\"Is active\" />\n\n\n\n    </Datagrid>\n</ArrayField>\n            </Tab>\n\n        </TabbedShowLayout>\n\n    </Show>\n\n    </>\n  )\n};","import React, { FC } from 'react';\nimport { fetchUtils, Admin as ReactAdmin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport authProvider from './authProvider';\nimport {BACKEND_URL} from '../config'\nimport { UserList, UserEdit, UserCreate, UserShow} from './Users';\nimport { RoleList, RoleEdit, RoleCreate, RoleShow} from './Roles';\n\nconst httpClient = (url: any, options: any) => {\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: 'application/json' });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = simpleRestProvider(`${BACKEND_URL}/api/v1`, httpClient);\n// console.log(dataProvider)\n\nexport const Admin: FC = () => {\n  return (\n    <ReactAdmin dataProvider={dataProvider} authProvider={authProvider}>\n      {(permissions: 'admin' | 'normal'| 'restricted') => [\n        permissions === 'admin' ? (\n          <Resource\n            name=\"users\"\n            list={UserList}\n            edit={UserEdit}\n            create={UserCreate}\n            show={UserShow}\n\n          />\n        ) :     (   <Resource\n        name=\"users\"\n        list={UserList}\n        // edit={UserEdit}\n        // create={UserCreate}\n\n        />),\n        <Resource\n        name=\"roles\"\n        list={RoleList}\n        edit={RoleEdit}\n        create={RoleCreate}\n        show={RoleShow}\n      />\n      ]}\n\n    </ReactAdmin>\n    \n  );\n};\n","import React, { FC } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Home, Login, SignUp, Protected, PrivateRoute } from './views';\nimport { Admin } from './admin';\nimport { logout } from './utils/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    textAlign: 'center',\n  },\n  header: {\n    backgroundColor: '#282c34',\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white',\n  },\n}));\n\nexport const Routes: FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route path=\"/admin\">\n        <Admin />\n      </Route>\n\n      <div className={classes.app}>\n        <header className={classes.header}>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route\n            path=\"/logout\"\n            render={() => {\n              logout();\n              history.push('/');\n              return null;\n            }}\n          />\n          <PrivateRoute path=\"/protected\" component={Protected} />\n          <Route exact path=\"/\" component={Home} />\n        </header>\n      </div>\n    </Switch>\n  );\n};\n","import React, { FC } from 'react';\nimport { Routes } from './Routes';\n\nconst App: FC = () => <Routes />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}